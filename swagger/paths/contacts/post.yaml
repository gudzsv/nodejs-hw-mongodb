tags:
  - Contacts
summary: Create a new contact
operationId: createContact
description: |
  **Create a new contact**

  This endpoint allows users to create a new contact with the following details:

  - **Required fields:**
    - **Name**: The contact's full name.
    - **Phone Number**: The contact's phone number, including country code if necessary.
    - **Contact Type**: The type of contact (e.g., work, home, personal).

  - **Optional fields:**
    - **Email**: The contact's email address.
    - **Is Favorite**: A flag indicating whether the contact is marked as a favorite.
    - **Photo**: An optional file for the contact's photo (should be in image format).

  Ensure that all required fields are provided to successfully create a contact. Optionally, you may include additional information to enrich the contact's details.

security:
  - bearerAuth: []
requestBody:
  content:
    multipart/form-data:
      schema:
        type: object
        required:
          - name
          - phoneNumber
          - contactType
        properties:
          name:
            type: string
            description: 'The full name of the contact.'
            example: 'Nik Brook'
          phoneNumber:
            type: string
            description: "The contact's phone number, including country code if necessary."
            example: '+38000000899'
          email:
            type: string
            description: "The contact's email address. This is optional."
            example: 'nik@example.com'
          isFavorite:
            type: boolean
            description: 'Indicates whether the contact is marked as a favorite.'
            example: false
          contactType:
            type: string
            description: "The type of the contact. It can be 'work', 'home', or 'personal'."
            enum: ['work', 'home', 'personal']
            example: 'personal'
          photo:
            type: string
            format: binary
            description: "An optional file for the contact's photo. It should be in image format."

responses:
  '201':
    description: Contact successfully created
    content:
      application/json:
        schema:
          type: object
          properties:
            status:
              type: integer
              example: 201
            message:
              type: string
              example: Successfully created a contact!
            data:
              allOf:
                - $ref: '../../components/schemas/contact.yaml'
                - type: object
                  properties:
                    createdAt:
                      type: string
                      format: date-time
                      example: '2024-08-29T20:39:40.775Z'
                    updatedAt:
                      type: string
                      format: date-time
                      example: '2024-08-29T20:39:40.775Z'
  '400':
    description: Bad Request - Invalid or missing required fields
    content:
      application/json:
        schema:
          type: object
          properties:
            status:
              type: integer
              example: 400
            message:
              type: string
              example: BadRequestError
            errors:
              type: array
              items:
                oneOf:
                  - type: object
                    properties:
                      field:
                        type: string
                        description: 'The specific field with an error.'
                        example: 'name'
                      error:
                        type: string
                        description: 'Detailed error message regarding the validation issue.'
                        example: "'name' is a required field"
                    required:
                      - field
                      - error
                    additionalProperties: false
                  - type: object
                    properties:
                      field:
                        type: string
                        description: 'The specific field with an error.'
                        example: 'phoneNumber'
                      error:
                        type: string
                        description: 'Detailed error message regarding the validation issue.'
                        example: "'phoneNumber' is a required field"
                    required:
                      - field
                      - error
                    additionalProperties: false
                  - type: object
                    properties:
                      field:
                        type: string
                        description: 'The specific field with an error.'
                        example: 'contactType'
                      error:
                        type: string
                        description: 'Detailed error message regarding the validation issue.'
                        example: "'contactType' is a required field"
                    required:
                      - field
                      - error
                    additionalProperties: false
  '404':
    description: Not found Error - Session or Authorization header not found
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
            - data
          properties:
            status:
              type: integer
              example: 404
            message:
              type: string
              example: NotFoundError
            data:
              type: object
              required:
                - message
              properties:
                message:
                  type: string
                  example: 'Session not found'
              additionalProperties: false
        examples:
          no_token:
            summary: Session not found
            value:
              status: 404
              message: NotFoundError
              data:
                message: Session not found
          token_expired:
            summary: Authorization header not found
            value:
              status: 404
              message: NotFoundError
              data:
                message: Authorization header not found
  '401':
    description: Unauthorized - Authentication required or token invalid
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
            - data
          properties:
            status:
              type: integer
              example: 401
            message:
              type: string
              example: UnauthorizedError
            data:
              type: object
              required:
                - message
              properties:
                message:
                  type: string
                  example: 'User not authorized'
              additionalProperties: false
        examples:
          no_token:
            summary: User not authorized
            value:
              status: 401
              message: UnauthorizedError
              data:
                message: User not authorized
          token_expired:
            summary: Access token expired
            value:
              status: 401
              message: UnauthorizedError
              data:
                message: Access token expired
